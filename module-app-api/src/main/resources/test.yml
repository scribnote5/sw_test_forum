# sql 문의 조건을 출력한다.
#logging:
#  level:
#    org:
#      hibernate:
#        type:
#          descriptor:
#            sql: trace
spring:
  config:
    activate:
      on-profile: test
  jpa:
    # DBMS 종류 및 버전의 문법에 해당되는 SQL 문을 생성한다.
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
      properties:
        hibernate:
          # sql 문을 가독성 좋게 출력한다.
          format_sql: true
          # sql 문에 색상을 입힌다.
          highlight_sql: true
          # sql 문을 보여준다.
          show_sql: true
          # sql 문 추가 주석을 보여준다.
          use_sql_comment: true
  h2:
    console:
      enabled: true
      path: /console
  datasource:
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요, 메인 메모리를 저장 장소로 사용한다.(휘발성)
    url: jdbc:h2:mem:test;MODE=mysql;
    # test는 DB 이름으로서 생성한 DB 이름으로 변경 필요, File을 저장 장소로 사용한다.(비휘발성)
    # url: jdbc:h2:file:~/data/h2/testdb;MODE=MySQL
    # 개인 아이디로 변경 필요하다.
    username: scribnote5
    # 개인 비밀번호로 변경 필요하다.
    password: 123123123
    driver-class-name: org.h2.Driver
    # spring boot 2.x에서는 connection pool로 HikariCP를 사용한다.
    # HikariCP 설정은 default value 값을 사용하였으며, HikariCP에서 추천하는 mysql 설정을 다음과 같이 적용하였다.
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
server:
  port: 8082
localhost:
  url: http://localhost:8585
module-app-web:
  url: http://localhost:8585
module-app-api:
  url: http://localhost:8586
module-app-admin:
  url: http://localhost:8587